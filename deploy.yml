apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      # securityContext:                  # This describes the pods to run as non-root
      #   runAsUser: 1000
      #   runAsGroup: 1000
      #   fsGroup: 1000
      containers:
      - name: frontend
        image: 992382386864.dkr.ecr.us-east-1.amazonaws.com/frontend:301
        ports:              # port where your container listens
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "250m"

--- 
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80              
      targetPort: 80   

--- 

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75

--- 
# Ingress Object 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  ingressClassName: nginx 
  rules:
  # - host: afda187618de34eafbe07a9b6aab42a3-901934991.us-east-1.elb.amazonaws.com
  - http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: frontend-svc
            port:
              number: 80
